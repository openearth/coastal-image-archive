---
- name: include confidential source_vars.yml file
  include_vars: source_vars.yml
  register: source_vars_included
  ignore_errors: True

- name: Copy needed Perl files to server
  copy:
     src={{ dim_downloads_dir }}/{{ item }}
     dest=/tmp/{{ item }}
  with_items: perl_modules

- name: Copy needed Dim file to server
  copy:
     src={{ dim_downloads_dir }}/{{ dim_package }}
     dest=/tmp/{{ dim_package }}

- name: Install packages on server.
  become: yes
  yum:
     name=/tmp/{{ item }}
     state=present
  with_items: perl_modules

- name: Install perl-Net-SFTP-Foreign package on server.
  become: yes
  yum:
     name=perl-Net-SFTP-Foreign
     state=present

- name: Install Dim package on server.
  become: yes
  yum:
     name=/tmp/{{ dim_package }}
     state=present

- name: Install mariaDB package on server.
  become: yes
  yum:
     name=mariadb-server
     state=present

- name: Install MySQL-python package on server.
  become: yes
  yum:
     name=MySQL-python
     state=present

- name: make sure MySQL/MariaDB is started on
  become: yes
  service:  name=mariadb
            state=started
#              enabled=yes

- name: Create a new database
  become: yes
  mysql_db: name={{ dim_database_name }} state=present
  register: db_created

- name:  Create database user with all database privileges on database dim
  become: yes
  mysql_user: name={{ dim_database_user }} password={{ dim_database_passwd }} priv=dim.*:ALL state=present
  when: db_created.changed

- name:  Import database dump file to database
  become: yes
  mysql_db: name={{ dim_database_name }} state=import target=/opt/dim/tools/database/mysql/create_tables.sql
  when: db_created.changed

- name: create dim directory
  become: yes
  file: path={{ dim_config_dir }} state=directory owner=dim group=dim

- name: configure dim
  become: yes
  become_user: dim
  template: src=dim_config.xml.j2 dest={{ dim_config_dir }}/dim_config.xml

- name: create directory
  become: yes
  file: path={{ dim_config_dir }}/datasets state=directory owner=dim group=dim

- name: configure dim datasets
  become: yes
  become_user: dim
  template: src=datasets.xml.j2 dest={{ dim_config_dir }}/datasets/datasets_{{ item.id }}.xml
  with_items: dim_sites # datasets are (nested) item in dim_sites variable
  when: source_vars_included.changed

- name: create directory
  become: yes
  file: path={{ dim_config_dir }}/sites state=directory owner=dim group=dim

- name: configure dim sites
  become: yes
  become_user: dim
  template: src=site.xml.j2 dest={{ dim_config_dir }}/sites/site_{{ item.id }}.xml
  with_items: dim_sites
  when: source_vars_included.changed

- name: copy rename.sh
  become: yes
  become_user: dim
  copy:
     src=contrib/rename.sh
     dest={{ dim_config_dir }}/rename.sh

- name: create target directory
  become: yes
  file: path={{ dim_target_directory }} state=directory owner=dim group=dim

- name: create target directories
  become: yes
  file: path={{ dim_target_directory }}/{{ item.id }} state=directory owner=dim group=dim
  with_items: dim_sites
  when: source_vars_included.changed
