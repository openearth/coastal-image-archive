---
- name: include confidential source_vars.yml file
  include_vars: source_vars.yml
  register: source_vars_included
  ignore_errors: True

- name: Copy Perl module packages to server
  copy:
    src={{ dim_downloads_dir }}/{{ item }}
    dest=/tmp/{{ item }}
  with_items: "{{ perl_modules }}"

- name: Copy Dim package to server
  copy:
    src={{ dim_downloads_dir }}/{{ dim_package }}
    dest=/tmp/{{ dim_package }}

- name: Install perl module packages
  become: yes
  yum:
    name=/tmp/{{ item }}
    state=present
  with_items: "{{ perl_modules }}"

- name: Install perl-Net-SFTP-Foreign package on server
  become: yes
  yum:
    name=perl-Net-SFTP-Foreign
    state=present

- name: Install Dim package on server
  become: yes
  yum:
    name=/tmp/{{ dim_package }}
    state=present

- name: Create a new database
  become: yes
  mysql_db:
    name={{ dim_database_name }}
    state=present
  register: db_created

- name:  Create database user with all database privileges on database dim
  become: yes
  mysql_user:
    name={{ dim_database_user }}
    password={{ dim_database_passwd }}
    priv=dim.*:ALL
    state=present
  when: db_created.changed

- name:  Import database dump file to database
  become: yes
  mysql_db:
    name={{ dim_database_name }}
    state=import
    target=/opt/dim/tools/database/mysql/create_tables.sql
  when: db_created.changed

- name: create dim directories
  become: yes
  file:
    path={{ item }}
    state=directory
    owner=dim
    group=dim
  with_items:
    - "{{ dim_target_directory }}"
    - "{{ dim_target_directory }}/dim"
    - "{{ dim_target_directory }}/dim/data"
    - "{{ dim_target_directory }}/dim/work"

- name: create dim .ssh directory
  become: yes
  file:
    path=/opt/dim/.ssh
    state=directory
    mode=700
    owner=dim
    group=dim

- name: create .ssh/config
  become: yes
  become_user: dim
  template:
    src=ssh_config.j2
    dest=/opt/dim/.ssh/config

- name: configure dim
  become: yes
  become_user: dim
  template:
    src=dim_config.xml.j2
    dest={{ dim_config_dir }}/dim_config.xml

- name: configure dim datasets
  become: yes
  become_user: dim
  template:
    src=datasets.xml.j2
    dest={{ dim_config_dir }}/datasets/datasets_{{ item.id }}.xml
    backup=yes
  with_items: "{{ dim_sites }}" # datasets are (nested) item in dim_sites variable

- name: configure dim sites
  become: yes
  become_user: dim
  template:
    src=site.xml.j2
    dest={{ dim_config_dir }}/sites/site_{{ item.id }}.xml
    backup=yes
  with_items: "{{ dim_sites }}"

- name: copy rename.sh
  become: yes
  become_user: dim
  copy:
     src=contrib/rename.sh
     dest={{ dim_config_dir }}/rename.sh

- name: create target directories
  become: yes
  file:
    path={{ dim_target_directory }}/{{ item.id }}
    state=directory
    owner=dim
    group=dim
  with_items: "{{ dim_sites }}"

- name: make dim3_init executable
  become: yes
  file:
    path: /opt/dim/bin/dim3_init
    state: touch
    mode: 0750

- name: make dim3_init executable
  become: yes
  file:
    path: /etc/systemd/system/dim3.service
    state: touch
    mode: 0664

- name: systemctl daemon-reload
  become: yes
  command: systemctl daemon-reload
  notify: restart dim

- name: make sure dim is started on boot
  become: yes
  service:  name=dim3
            state=started
            enabled=yes